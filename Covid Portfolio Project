SELECT * 
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
order by 3,4

SELECT * 
FROM warm-skill-371208.covid_portfolio_project.covid_vaccinations
order by 3,4

--Select data 

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
order by 1,2

--Total cases vs. total deaths

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
WHERE location = ('United States')
order by 1,2

--Total cases vs. population

SELECT location, date, population, total_cases, (total_cases/population)*100 as DeathPopulation
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
order by 1,2

--Countries with highest infection rates compared to population

SELECT location, population, MAX(total_cases) as HighestInfectionCount, MAX(total_cases/population)*100 as PercentPopulationInfected
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
--WHERE continent is not null
GROUP BY location, population
order by PercentPopulationInfected desc

SELECT location, population, date, MAX(total_cases) as HighestInfectionCount, MAX(total_cases/population)*100 as PercentPopulationInfected
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
--WHERE continent is not null
GROUP BY location, population, date
order by PercentPopulationInfected desc

--Countries with the highest death count per population

SELECT location, MAX(total_deaths) as TotalDeathCount
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
WHERE continent is null
and location not in ('World', 'European Union', 'International', 'High income', 'Upper middle income', 'Lower middle income', 'Low income')
GROUP BY location
order by TotalDeathCount desc

--Deaths by continent

SELECT continent, MAX(total_deaths) as TotalDeathCount
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
WHERE continent is not null
GROUP BY continent
order by TotalDeathCount desc

-- Global numbers


SELECT SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths, SUM(new_deaths)/SUM(new_cases)*100 as DeathPercentage
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
WHERE continent is not null
order by 1,2

-- Total Population vs Vaccinations
-- Percentage of Population that has recieved at least one Covid Vaccine

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From warm-skill-371208.covid_portfolio_project.covid_deaths dea
Join warm-skill-371208.covid_portfolio_project.covid_vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
ORDER BY 2,3

--Use CTE

WITH PopvsVac 
as  
(
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From warm-skill-371208.covid_portfolio_project.covid_deaths dea
Join warm-skill-371208.covid_portfolio_project.covid_vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac

--Temp table
CREATE TABLE IF NOT EXISTS warm-skill-371208.covid_portfolio_project.PercentPopulationVaccinated
(
Continent String(255),
Location String(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
);
Insert into warm-skill-371208.covid_portfolio_project.PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From warm-skill-371208.covid_portfolio_project.covid_deaths dea
Join warm-skill-371208.covid_portfolio_project.covid_vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date


Select *, (RollingPeopleVaccinated/Population)*100
From warm-skill-371208.covid_portfolio_project.PercentPopulationVaccinated
where continent is not null

-- Create view of percent of population vaccinated

CREATE VIEW warm-skill-371208.covid_portfolio_project.PercentPopulationVaccinated2 as
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(vac.new_vaccinations) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
From warm-skill-371208.covid_portfolio_project.covid_deaths dea
Join warm-skill-371208.covid_portfolio_project.covid_vaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 

--Create view of total death count

CREATE VIEW warm-skill-371208.covid_portfolio_project.TotalDeathCount2 as
SELECT continent, MAX(total_deaths) as TotalDeathCount
FROM warm-skill-371208.covid_portfolio_project.covid_deaths
WHERE continent is not null
GROUP BY continent
order by TotalDeathCount desc

SELECT *
FROM warm-skill-371208.covid_portfolio_project.TotalDeathCount2
